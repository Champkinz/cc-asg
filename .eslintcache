[{"/home/champ/projects/IIT/cc-asg/src/index.tsx":"1","/home/champ/projects/IIT/cc-asg/src/reportWebVitals.ts":"2","/home/champ/projects/IIT/cc-asg/src/App.tsx":"3","/home/champ/projects/IIT/cc-asg/src/components/login.tsx":"4","/home/champ/projects/IIT/cc-asg/src/components/dashboard.tsx":"5","/home/champ/projects/IIT/cc-asg/src/components/home/index.tsx":"6","/home/champ/projects/IIT/cc-asg/src/components/services/index.tsx":"7","/home/champ/projects/IIT/cc-asg/src/components/assignmentDoc/index.tsx":"8","/home/champ/projects/IIT/cc-asg/src/sdk/server.ts":"9"},{"size":529,"mtime":1609257263270,"results":"10","hashOfConfig":"11"},{"size":425,"mtime":1609256236580,"results":"12","hashOfConfig":"11"},{"size":558,"mtime":1610278438980,"results":"13","hashOfConfig":"11"},{"size":3328,"mtime":1609259085220,"results":"14","hashOfConfig":"11"},{"size":4005,"mtime":1610278713760,"results":"15","hashOfConfig":"11"},{"size":1004,"mtime":1610275531830,"results":"16","hashOfConfig":"11"},{"size":2699,"mtime":1610277989100,"results":"17","hashOfConfig":"11"},{"size":306,"mtime":1610275368490,"results":"18","hashOfConfig":"11"},{"size":1393,"mtime":1610277637600,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"1s0nexu",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27","usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},"/home/champ/projects/IIT/cc-asg/src/index.tsx",[],["43","44"],"/home/champ/projects/IIT/cc-asg/src/reportWebVitals.ts",[],"/home/champ/projects/IIT/cc-asg/src/App.tsx",["45","46","47","48"],"import React, { useState } from \"react\";\nimport { BrowserRouter as Router, Switch, Route, Link } from \"react-router-dom\";\nimport Dashboard from \"./components/dashboard\";\nimport Login from \"./components/login\";\n\nexport default function App() {\n  const [mainUser, setmainUser] = useState({ user: {}, login: true });\n  document.title = \"CC - Assignment\";\n  return (\n    <div style={{ height: \"100vh\" }}>\n      {mainUser.login ? (\n        <Login setmainUser={setmainUser} />\n      ) : (\n        <Dashboard setmainUser={setmainUser} />\n      )}\n    </div>\n  );\n}\n","/home/champ/projects/IIT/cc-asg/src/components/login.tsx",["49","50"],"import { Button, Card, Form, Input, Typography } from \"antd\";\nimport React, { FC } from \"react\";\nconst { Title, Text } = Typography;\n\nconst Login: FC<LoginProps> = ({ setmainUser }) => {\n  const layout = {\n    labelCol: { span: 8 },\n    wrapperCol: { span: 16 },\n  };\n  const tailLayout = {\n    wrapperCol: { offset: 8, span: 16 },\n  };\n\n  const onFinish = (values: any) => {\n    console.log(\"Success:\", values);\n  };\n\n  const onFinishFailed = (errorInfo: any) => {\n    console.log(\"Failed:\", errorInfo);\n  };\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        flex: 1,\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        paddingTop: \"5rem\",\n        height: \"100vh\",\n      }}\n    >\n      <div\n        style={{\n          width: \"50%\",\n          height: \"50%\",\n          boxShadow:\n            \"0 14px 28px rgba(0,0,0,0.25), 0 10px 10px rgba(0,0,0,0.22)\",\n        }}\n      >\n        <div\n          style={{\n            display: \"flex\",\n            flex: 1,\n            flexDirection: \"row\",\n            justifyContent: \"space-around\",\n            height: \"100%\",\n          }}\n        >\n          <div\n            style={{\n              display: \"flex\",\n              flex: 1,\n              flexDirection: \"row\",\n              background: \"linear-gradient(to right, #FF4B2B, #FF416C)\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              padding: \"1rem\",\n            }}\n          >\n            <Text\n              style={{\n                fontSize: \"2rem\",\n                fontWeight: \"bold\",\n                color: \"white\",\n                textAlign: \"center\",\n              }}\n            >\n              Cloud Computing\n              <br /> Assignment\n            </Text>\n          </div>\n          <div\n            style={{\n              display: \"flex\",\n              flex: 1,\n              flexDirection: \"row\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              padding: \"1rem\",\n            }}\n          >\n            <Form\n              {...layout}\n              name=\"basic\"\n              initialValues={{ remember: true }}\n              onFinish={onFinish}\n              onFinishFailed={onFinishFailed}\n            >\n              <Form.Item\n                label=\"Username\"\n                name=\"username\"\n                rules={[\n                  { required: true, message: \"Please input your username!\" },\n                ]}\n              >\n                <Input />\n              </Form.Item>\n\n              <Form.Item\n                label=\"Password\"\n                name=\"password\"\n                rules={[\n                  { required: true, message: \"Please input your password!\" },\n                ]}\n              >\n                <Input.Password />\n              </Form.Item>\n\n              <Form.Item {...tailLayout}>\n                <Button\n                  type=\"primary\"\n                  htmlType=\"submit\"\n                  onClick={() => {\n                    setmainUser((prev: any) => ({ ...prev, login: false }));\n                  }}\n                >\n                  Signin\n                </Button>\n              </Form.Item>\n            </Form>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\ninterface LoginProps {\n  setmainUser: any;\n}\n\nexport default Login;\n","/home/champ/projects/IIT/cc-asg/src/components/dashboard.tsx",["51","52","53","54","55","56"],"import { Breadcrumb, Button, Layout, Menu, Typography } from \"antd\";\nimport React, { FC, useState } from \"react\";\nimport {\n  DesktopOutlined,\n  PieChartOutlined,\n  FileOutlined,\n  TeamOutlined,\n  UserOutlined,\n  LogoutOutlined,\n} from \"@ant-design/icons\";\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link,\n  useHistory,\n} from \"react-router-dom\";\nimport Home from \"./home\";\nimport ServicesMain from \"./services\";\nimport AssignmentDoc from \"./assignmentDoc\";\nconst { Header, Content, Footer, Sider } = Layout;\nconst { SubMenu } = Menu;\n\nconst Dashboard: FC<DashboardProps> = ({ setmainUser }) => {\n  const [collapsed, setcollapsed] = useState(false);\n  const toggleCollapsed = () => {\n    setcollapsed(!collapsed);\n  };\n\n  const [Crumbs, setCrumbs] = useState(\"Assignment Description\");\n  return (\n    <Router>\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Sider collapsible collapsed={collapsed} onCollapse={toggleCollapsed}>\n          <div\n            style={{\n              height: 80,\n            }}\n            className=\"flex flex-1 justify-center items-center\"\n          >\n            {!collapsed ? (\n              <Typography.Title\n                level={4}\n                style={{\n                  color: \"white\",\n                  textAlign: \"center\",\n                }}\n              >\n                Cloud Computing Assignment\n              </Typography.Title>\n            ) : (\n              <Typography.Text style={{ color: \"white\" }}>\n                CC ASG\n              </Typography.Text>\n            )}\n          </div>\n          <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\">\n            <Menu.Item key=\"1\" icon={<PieChartOutlined />}>\n              <Link to=\"/\">Assignment Description</Link>\n            </Menu.Item>\n\n            <Menu.Item key=\"2\" icon={<FileOutlined />}>\n              <Link to=\"/services\">Lambda Services</Link>\n            </Menu.Item>\n            <Menu.Item key=\"3\" icon={<UserOutlined />}>\n              <Link to=\"/asg-doc\">Assignment Documentation</Link>\n            </Menu.Item>\n          </Menu>\n        </Sider>\n        <Layout className=\"site-layout\">\n          <div\n            style={{\n              paddingLeft: \"1rem\",\n              paddingRight: \"1rem\",\n              backgroundColor: \"#747d8c\",\n            }}\n            className=\"flex flex-row justify-between items-center\"\n          >\n            <Breadcrumb style={{ margin: \"16px 0\" }}>\n              <Breadcrumb.Item>\n                <Typography.Title level={5} style={{ color: \"white\" }}>\n                  {Crumbs}\n                </Typography.Title>\n              </Breadcrumb.Item>\n            </Breadcrumb>\n            <Button\n              type=\"dashed\"\n              onClick={() =>\n                setmainUser((prev: any) => ({ ...prev, login: true }))\n              }\n              icon={<LogoutOutlined />}\n            />\n          </div>\n\n          <Content style={{ margin: \"0 16px\" }}>\n            <Switch>\n              <Route path=\"/services\">\n                <div\n                  className=\"site-layout-background\"\n                  style={{ padding: 24, minHeight: 360 }}\n                >\n                  <ServicesMain setCrumbs={setCrumbs} />\n                </div>\n              </Route>\n              <Route path=\"/asg-doc\">\n                <div\n                  className=\"site-layout-background\"\n                  style={{ padding: 24, minHeight: 360 }}\n                >\n                  <AssignmentDoc setCrumbs={setCrumbs} />\n                </div>\n              </Route>\n              <Route path=\"/\">\n                <div\n                  className=\"site-layout-background\"\n                  style={{ padding: 24, minHeight: 360 }}\n                >\n                  <Home setCrumbs={setCrumbs} />\n                </div>\n              </Route>\n            </Switch>\n          </Content>\n        </Layout>\n      </Layout>\n    </Router>\n  );\n};\n\ninterface DashboardProps {\n  setmainUser: any;\n}\n\nexport default Dashboard;\n","/home/champ/projects/IIT/cc-asg/src/components/home/index.tsx",[],"/home/champ/projects/IIT/cc-asg/src/components/services/index.tsx",[],"/home/champ/projects/IIT/cc-asg/src/components/assignmentDoc/index.tsx",[],"/home/champ/projects/IIT/cc-asg/src/sdk/server.ts",[],["57","58"],{"ruleId":"59","replacedBy":"60"},{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":2,"column":27,"nodeType":"65","messageId":"66","endLine":2,"endColumn":33},{"ruleId":"63","severity":1,"message":"67","line":2,"column":35,"nodeType":"65","messageId":"66","endLine":2,"endColumn":41},{"ruleId":"63","severity":1,"message":"68","line":2,"column":43,"nodeType":"65","messageId":"66","endLine":2,"endColumn":48},{"ruleId":"63","severity":1,"message":"69","line":2,"column":50,"nodeType":"65","messageId":"66","endLine":2,"endColumn":54},{"ruleId":"63","severity":1,"message":"70","line":1,"column":18,"nodeType":"65","messageId":"66","endLine":1,"endColumn":22},{"ruleId":"63","severity":1,"message":"71","line":3,"column":9,"nodeType":"65","messageId":"66","endLine":3,"endColumn":14},{"ruleId":"63","severity":1,"message":"72","line":4,"column":3,"nodeType":"65","messageId":"66","endLine":4,"endColumn":18},{"ruleId":"63","severity":1,"message":"73","line":7,"column":3,"nodeType":"65","messageId":"66","endLine":7,"endColumn":15},{"ruleId":"63","severity":1,"message":"74","line":16,"column":3,"nodeType":"65","messageId":"66","endLine":16,"endColumn":13},{"ruleId":"63","severity":1,"message":"75","line":21,"column":9,"nodeType":"65","messageId":"66","endLine":21,"endColumn":15},{"ruleId":"63","severity":1,"message":"76","line":21,"column":26,"nodeType":"65","messageId":"66","endLine":21,"endColumn":32},{"ruleId":"63","severity":1,"message":"77","line":22,"column":9,"nodeType":"65","messageId":"66","endLine":22,"endColumn":16},{"ruleId":"59","replacedBy":"78"},{"ruleId":"61","replacedBy":"79"},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"@typescript-eslint/no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'Card' is defined but never used.","'Title' is assigned a value but never used.","'DesktopOutlined' is defined but never used.","'TeamOutlined' is defined but never used.","'useHistory' is defined but never used.","'Header' is assigned a value but never used.","'Footer' is assigned a value but never used.","'SubMenu' is assigned a value but never used.",["80"],["81"],"no-global-assign","no-unsafe-negation"]